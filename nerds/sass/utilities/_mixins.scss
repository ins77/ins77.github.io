// ==========================================================================
// Mixins
// ==========================================================================

// Image replacement

@mixin img-replace($img, $inline: false, $disp: block) {
  display: $disp;
  width: image-width($img);
  height: image-height($img);
  background-repeat: no-repeat;
  @if $inline == true {
    background-image: inline-image("#{$img}");
  } @else {
    background-image: image-url("#{$img}");
  }
}

// Media queries

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpoint-sm) and (max-width: $brkpoint-md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint-md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint-lg) {
      @content;
    }
  }
  @else {
    @error "Whoops! No value could be retrieved for '#{$break}'";
  }
}

// Retina images

// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)
@mixin hidpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: #{round($ratio*96)}dpi),
  only screen and (min-resolution: #{$ratio}dppx) {
    @content;
  }
}

@mixin retina-image($filename, $background-size, $extension: png, $retina-suffix: _2x) {
  background-image: image-url("#{$filename}.#{$extension}");
  width: image-width("#{$filename}.#{$extension}");
  height: image-height("#{$filename}.#{$extension}");
  @include hidpi {
    background-image: image-url("#{$filename}#{$retina-suffix}.#{$extension}");
    background-size: $background-size;
  }
}

// Triangles

@mixin triangle($size, $point, $color) {
  $opposite: opposite-position($point);
  border: $size solid transparent;
  border-#{$opposite}: $size solid $color;
  border-#{$point}: 0;
  width: 0;
  height: 0;
}

// Buttons create

@mixin btn($name, $color) {
  &--#{$name} {
    @extend %btn;
    background: palette($color);
    &:hover {
      background: palette($color, dark);
    }
    &:active {
      background: palette($color, x-dark);
      @include box-shadow(inset 0 3px rgba(0,0,0,.15));
    }
    @if $name == info {
      color: #000;
    }
  }
}

